AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  CidrIp:
    Type: String
    Description: secondary octet ip addr
  Project:
    Type: String

Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Sub '10.${CidrIp}.0.0/16'
      EnableDnsHostnames: True
      Tags:
        - Key: Name
          Value: !Ref Project
        - Key: Project
          Value: !Ref Project
  Igw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref Project
        - Key: Project
          Value: !Ref Project
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref Igw

  ##----------------------------------##
  # Subnets
  ##----------------------------------##
  SubnetPublic1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1a
      VpcId: !Ref Vpc
      CidrBlock: !Sub 10.${CidrIp}.10.0/24
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: !Ref Project
        - Key: Project
          Value: !Ref Project
  SubnetPublic2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1c
      VpcId: !Ref Vpc
      CidrBlock: !Sub 10.${CidrIp}.20.0/24
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: !Ref Project
        - Key: Project
          Value: !Ref Project

  ##----------------------------------##
  # RouteTable
  ##----------------------------------##
  RouteTableForPublicSubnet:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Ref Project
        - Key: Project
          Value: !Ref Project
  DefaultRouteForPublicSubnet:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTableForPublicSubnet
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref Igw    
  RouteAssocPubSubnet1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPublic1
      RouteTableId: !Ref RouteTableForPublicSubnet
  RouteAssocPubSubnet2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPublic2
      RouteTableId: !Ref RouteTableForPublicSubnet

  ##----------------------------------##
  # Task Execute Role                 
  ##----------------------------------##
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${Project}-task-role'
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  ##----------------------------------##
  # Security Group            
  ##----------------------------------##
  AlbSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${Project}-alb-sg"
      GroupDescription: allowed http access from internet.
      VpcId: !Ref Vpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Ref Project
        - Key: Project
          Value: !Ref Project

  EcsSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${Project}-ecs-sg"
      GroupDescription: allowed http access from alb.
      VpcId: !Ref Vpc
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref AlbSg
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
      Tags:
        - Key: Name
          Value: !Ref Project
        - Key: Project
          Value: !Ref Project
  ##----------------------------------##
  # ALB            
  ##----------------------------------##
  Alb:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Type: application
      SecurityGroups:
        - !Ref AlbSg
      Subnets:
        - !Ref SubnetPublic1
        - !Ref SubnetPublic2
      Tags:
        - Key: Name
          Value: !Ref Project
        - Key: Project
          Value: !Ref Project
  AlbTg:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      VpcId: !Ref Vpc
      Name: !Sub "${Project}-tg"
      Protocol: HTTP
      Port: 80
      TargetType: ip
      Tags:
        - Key: Name
          Value: !Ref Project
        - Key: Project
          Value: !Ref Project

  AlbListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref Alb
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref AlbTg

  ##----------------------------------##
  # TaskDefinition            
  ##----------------------------------##
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "${Project}-ecs-task"
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      Cpu: 256
      Memory: 512
      ContainerDefinitions:
        - Name: !Sub "${Project}-container"
          Image: nginx:latest
          PortMappings:
            - HostPort: 80
              Protocol: tcp
              ContainerPort: 80

  ##----------------------------------##
  # Cluster          
  ##----------------------------------##
  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "${Project}-cluster"
  ##----------------------------------##
  # Service      
  ##----------------------------------##
  Service:
    Type: AWS::ECS::Service
    DependsOn: Alb
    Properties:
      Cluster: !Ref Cluster
      LoadBalancers:
        - TargetGroupArn: !Ref AlbTg
          ContainerPort: 80
          ContainerName: !Sub "${Project}-container"
      LaunchType: FARGATE
      DesiredCount: 3
      TaskDefinition: !Ref TaskDefinition
      ServiceName: !Sub "${Project}-service"
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref EcsSg
          Subnets:
            - !Ref SubnetPublic1
            - !Ref SubnetPublic2